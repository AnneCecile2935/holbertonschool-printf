#include <stdarg.h>
#include "main.h"

/**
 * print_int - fonction qui retourne des valeurs quand elles sont négatives
 * et retourne la longueur de
 * @arg: Contient la liste des arguments variadique
 * Return: on retourne count
 */

int print_int(va_list arg)
{
long int num = va_arg(arg, int);
char buffer[12];
int count = 0;
int neg = 0;
int i = 0;

if (num == 0)
{
_putchar ('0');
return (1);
}
if (num < 0)
{
neg = 1;
num = -num;
}
while (num > 0)
{
buffer[i++] = num % 10 + '0';
num = num / 10;
}
if (neg)
{
buffer[i++] = '-';
}
while (i--)
{
_putchar(buffer[i]);
count++;
}
return (count);
}

/*
On récupère d'abord l'argument de type int avec la fonction va_arg. il est traité
comme un entier mais il retourne un long int pour s'assurer qu'il peut gérer les valeurs négatives
On intialise ensuite un tableau qui stock les entiers en système 32 bits.
count elle va compter le nombre de caractères et comme pour le printf.c sera la valeur de retour
neg est une variable qui va indiquer si l'entier est négatif
i : pour parcourir notre boucle

Si num est égal à zéro on affiche un 0 et retourne qui sera le nombre de
caractère à imprimé (du coup un 1)

Si num est inférieur à zéro, on met num  ??

La boucle va permettre de conertir l'entier en une châine de caractère car elle va tout
d'abord récupérer le dernier chiffre de num avec %10, on le convertit avec la table ASCII
et on divisi num par /10 pour obtenir le chiffre suivant au départ

Si neg est négatif (ce qui est normalement le cas) on ajoute le signe -

Vu qu'on affihce les chiffres dans le mauvais ordre avec la désincrémentation on le remet
à l'endroit et chaque caractère est imprimé au fur et à mesure avec count ++


*/
